group = "$groupPackage" as Object
version = "$projectVersion" as Object
description = "$rootProject.name"

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath libs.lombok.plugin
        classpath libs.gradle.versions.plugin
        classpath libs.license.gradle.plugin
        classpath libs.grgit.gradle
        classpath libs.spotless.plugin.gradle
    }
}

apply plugin: "io.freefair.lombok"
apply plugin: "java"
apply plugin: "java-library"
apply plugin: "maven-publish"
apply plugin: "signing"
apply plugin: "com.github.ben-manes.versions"
apply plugin: "com.github.hierynomus.license"
apply plugin: "jacoco"
apply plugin: "org.ajoberstar.grgit"
apply plugin: "com.diffplug.spotless"
// import gradle files
apply from: "gradle/dependencies.gradle"
apply from: "gradle/formatting.gradle"
apply from: "gradle/grgit.gradle"
apply from: "gradle/licensing.gradle"
apply from: "gradle/packaging.gradle"
apply from: "gradle/publishing.gradle"
apply from: "gradle/repositories.gradle"
apply from: "gradle/testing.gradle"

java {
    sourceCompatibility = "$projectSourceCompatibility" as Object
    toolchain {
        languageVersion = JavaLanguageVersion.of("$projectSourceCompatibility")
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    // uncomment the next line for build with compiler argument -Xlint:deprecation
    // options.compilerArgs << "-Xlint:deprecation"
    // uncomment the next line for build with compiler argument -Xlint:unchecked
    // options.compilerArgs << "-Xlint:unchecked"
}

tasks.named("test") {
    it.mustRunAfter(tasks.named("jar"))
}
